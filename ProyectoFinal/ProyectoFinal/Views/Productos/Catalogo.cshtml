@model IEnumerable<ProyectoFinal.Models.Productos>
@{
    ViewBag.Title = "Catálogo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container catalogo-container">
    <h1>Catálogo de Productos</h1>
    <div class="row">
        <div class="col-md-3 catalogo-filtros">
            <h4>Filtros</h4>
            <form method="get" action="@Url.Action("Catalogo", "Productos")">
                <h5>Categoría</h5>
                @if (ViewBag.Categorias != null)
                {
                    foreach (var categoria in ViewBag.Categorias)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="categorias" value="@categoria.Id" id="categoria-@categoria.Id"
                                   @(ViewBag.CategoriasSeleccionadas != null && ViewBag.CategoriasSeleccionadas.Contains(categoria.Id) ? "checked" : "") />
                            <label class="form-check-label" for="categoria-@categoria.Id">@categoria.Nombre</label>
                        </div>
                    }
                }
                <button type="submit" class="btn btn-primary mt-3">Aplicar Filtros</button>
            </form>
        </div>

        <div class="col-md-9 catalogo-productos">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <p class="mb-0">Mostrando @Model.Count() productos</p>
                <form method="get" action="@Url.Action("Catalogo", "Productos")">
                    @foreach (var categoria in ViewBag.CategoriasSeleccionadas)
                    {
                        <input type="hidden" name="categorias" value="@categoria" />
                    }

                    <select class="form-select" style="width: auto;" name="ordenarPor" onchange="this.form.submit()">
                        <option value="" @(string.IsNullOrEmpty(ViewBag.OrdenarPor) ? "selected" : "")>Ordenar por: Todos</option>
                        <option value="PrecioAsc" @(ViewBag.OrdenarPor == "PrecioAsc" ? "selected" : "")>Precio: Menor a Mayor</option>
                        <option value="PrecioDesc" @(ViewBag.OrdenarPor == "PrecioDesc" ? "selected" : "")>Precio: Mayor a Menor</option>
                    </select>
                </form>
            </div>

            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
                @foreach (var producto in Model)
                {
                    <div class="col">
                        <div class="card h-100 d-flex flex-column">
                            <a href="@Url.RouteUrl("InfoProducto", new { id = producto.id_producto })" class="card-link">
                                <div class="card-img-top-wrapper">
                                    <img src="@producto.imagenAlmacenada" class="card-img-top" alt="@producto.nombreProducto">
                                </div>
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@producto.nombreProducto</h5>
                                    <p class="precio">₡@producto.precioProducto.ToString("0.00")</p>
                                    <div class="grupo-boton mt-auto">
                                        @Html.ActionLink("Agregar al Carrito", "AgregarAlCarrito", "CarritoDeCompras", new { productoId = producto.id_producto }, new { @class = "btn btn-primary btn-agregar w-100" })
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                }
                @if (!Model.Any())
                {
                    <p>No se encontraron productos.</p>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .catalogo-container {
        margin-top: 2rem;
    }

    .catalogo-filtros {
        margin-bottom: 1.5rem;
    }

    .catalogo-productos .card-img-top-wrapper {
        width: 100%;
        aspect-ratio: 4/3;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 220px;
        max-height: 300px;
    }

    .catalogo-productos .card-img-top {
        width: 100%;
        height: 100%;
        object-fit: cover;
        min-width: 150px;
        max-width: 100%;
        max-height: 100%;
    }


    .catalogo-productos .card {
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

        .catalogo-productos .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .catalogo-productos .card-body {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .catalogo-productos .card-title {
        font-size: 1.1rem;
        font-weight: bold;
        margin-bottom: 0.5rem;
    }

    .catalogo-productos .btn-agregar {
        width: 100%;
    }

    .catalogo-productos .card-link {
        text-decoration: none;
        color: inherit;
    }

        .catalogo-productos .card-link:hover {
            text-decoration: none;
        }

    @@media (max-width: 575.98px) {
        .catalogo-productos .card-img-top-wrapper {
            height: auto;
        }

        .catalogo-productos .card {
            margin-bottom: 1rem;
        }
    }
</style>
